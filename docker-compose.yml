version: "3.7"
services:
  backend:
    build: ./backend
    volumes:
      - ./backend:/app
      - chroma_data:/app/chroma_db
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=ragnarok
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=llama3
    depends_on:
      db:
        condition: service_healthy
      ollama:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/test"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: /bin/sh -c "python init_db.py && python migrate_db.py && gunicorn -b 0.0.0.0:5000 --timeout 120 app:app"

  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  db:
    image: postgres:14
    environment:
      POSTGRES_DB: ragnarok
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ragnarok"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: |
      /bin/bash -c "
      # Start Ollama in the background
      /bin/ollama serve &
      
      # Wait for Ollama to be ready
      sleep 10
      
      # Pull the llama3 model if it doesn't exist
      until /bin/ollama list | grep -q llama3; do
        echo 'Pulling llama3 model...'
        /bin/ollama pull llama3
        sleep 5
      done
      
      echo 'Ollama is ready with llama3 model'
      
      # Keep the container running
      wait
      "

volumes:
  pgdata:
  ollama_data:
  chroma_data:
